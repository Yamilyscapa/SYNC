---
import { AppWindowMac, Smartphone, MonitorSmartphone } from "@lucide/astro";

type IconType = "Web" | "Phone" | "Desktop";

interface Props {
    title: string;
    description?: string;
    icon: IconType;
    id: string;
}

const { title, description, icon, id }: Props = Astro.props;

const iconMap = {
    Web: MonitorSmartphone,
    Phone: Smartphone,
    Desktop: AppWindowMac,
};

const IconComponent = iconMap[icon];
---

<script define:vars={{ id }}>
    document.addEventListener('DOMContentLoaded', () => {
        const service = document.querySelectorAll('.service');

        service.forEach((service) => {
            service.addEventListener('click', () => {
                const expandible = service.querySelector('.expandible');
                service.classList.toggle('visible');
                expandible?.classList.toggle('visible');
            });
        });
    });
</script>

<div class="service" id={id}>
    <div class="service_content">
        <div class="service_header">
            <IconComponent />
            <h3>{title}</h3>
        </div>

        <div class="expandible">
            <p>{description}</p>
            <div class="button_wrapper">
                <a href="#" class="button primary">Saber m√°s</a>
            </div>
        </div>
    </div>
</div>

<style lang="scss">
    .service {
        width: 100%;
        height: 4rem;
        padding: 1rem 2rem;
        background: rgba(255, 255, 255, 0.15);
        border: 1px solid #fff;
        border-radius: 1rem;
        cursor: pointer;
        position: relative;
        overflow: hidden;
        transition: height 0.3s ease;

        &.visible {
            height: 400px;
        }

        &_header {
            display: flex;
            align-items: center;
            gap: 1.5rem;
            transition: opacity 0.2s ease;

            &:hover {
                opacity: 0.8;
            }

            h3 {
                font-size: 1rem;
                font-weight: 500;
            }

            svg {
                width: 2rem;
                height: 2rem;
                color: #fff;
            }
        }
    }

    .expandible {
        display: none;

        &.visible {
            height: 350px;
            display: grid;
            grid-template-rows: 1fr 1fr;

            p {
                font-size: 1.2rem;
                opacity: 0.6;
                margin-top: 1.5rem;
            }

            .button_wrapper {
                width: 100%;
                text-align: center;
                margin-top: auto;
                padding-bottom: 2rem;

                a {
                    width: 100%;
                }
            }
        }
    }
</style>
